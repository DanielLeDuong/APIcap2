{"version":3,"sources":["index.js"],"names":["express","require","mongoose","cors","RegisterModel","cookieParser","app","json","use","UserDetailModal","authRoute","post","req","res","body","regis","err","then","create","findOne","username","user","console","log","password","put","_id","rest","updateOne","data","send","success","message","id","regeneratorRuntime","async","_context2","prev","next","params","awrap","sent","stop","userRoute"],"mappings":"mdAGA,IAAMA,QAAUC,QAAQ,WAClBC,SAAWD,QAAQ,YACnBE,KAAOF,QAAQ,QALrBG,cAAAH,QAAA,kBACAI,aAAAJ,QAAA,iBAEMD,gBAAkBC,QAAxB,oBACMC,UAAWD,QAAQ,iBAOnBK,IAAMN,UALNI,UAAaH,QAAGA,iBACtBK,IAAMD,IAAAA,QAAYE,QAUlBD,IAAIE,IAAIL,QATRG,IAAMG,IAAAA,gBAENP,SAAMQ,QAAYT,wGAgBlBK,IAAIK,KAAK,YAAY,SAACC,EAAIC,GAVtBL,cAAYD,OAAhBK,EAAAE,MAEIN,KAAIH,SAAAA,GAAAA,OAAAA,EAARE,KAEAQ,KAJIP,MAcO,SAAAQ,GAAG,OAAIH,EAAIN,KAAKS,OAJ3BV,IAAIK,KAAK,SAAA,SAATC,EAAqBC,GAACD,IAAAA,EAClBA,EAECK,KAFDb,EADkBQ,EAClBR,SAAcc,EADIN,EACJM,SAAdd,cAGOe,QAAAH,CAAGI,SAAAA,IAAAH,KAAA,SAAAI,GAHVC,QAAAC,IAAAF,GADJA,EAOSA,EAAUG,WAAAA,EAAaX,EACAD,KAAIE,WADJD,EAAAN,KACZiB,6BAEFL,EAAAA,KAAQ,kBAIdb,IAAAmB,IAAA,UAAQD,SAALZ,EAAkBY,GAAbA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EACJZ,EAAAE,KAAGY,EADCF,EACDE,IAAMC,EADLH,yBAAAA,EAAAA,CAAAA,QAGDX,QAAIN,IAAJoB,GAHCH,EAAAA,KAAAA,EAAAA,mBAAAA,MAGqCpB,cAAAwB,UAAA,CAAAF,IAAAA,GAAAC,IAHrCH,KAAAA,EAGqCK,EAHrCL,EAAAA,KAIXX,EALDiB,KAKO,CAAAC,SAAA,EAAAC,QAAA,qBAAAH,KAAAA,IAJKL,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAA,YAMnBlB,IAaE,OAVH,cAAA,SAAAM,EAAAC,GAAA,IAAAoB,EAAAJ,EAAA,OAAAK,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAWUL,EAAKrB,EAAI2B,OAAON,GAX1BG,EAAAE,KAAA,EAAAJ,mBAAAM,MACmBpC,cAAOQ,UAAP,CAAAc,IAAAO,KADnB,KAAA,EACQJ,EADRO,EAAAK,KACmB5B,EAAAiB,KAAA,CAAAC,SAAA,EAAAC,QAAA,qBAAAH,KAAAA,IADnB,KAAA,EAAA,IAAA,MAAA,OAAAO,EAAAM,YACmBpC,IAAAE,IAAA,WAAAE,WAAAJ,IAAAE,IAAA,WAAAmC,WAGfrB,IAAAA,OAAAA,KAAO,WAHQA,QAAAC,IAAA,uBAAAjB,IAAAK,KAAA,cAAA,SAAAC,EAAAC,GAITgB,gBAJSX,OAAAN,EAAAE,MAKLiB,KAAAA,SAAAA,GAAAA,OAAOlB,EAAEN,KAAVQ,KADHc,MACmBG,SAAAA,GAAAA,OAAAA,EAAQzB,KAAAS","file":"index.min.js","sourcesContent":["//WF3Xhi73BH6dXiOr\r\n//mavoiem\r\n\r\nconst express = require('express')\r\nconst mongoose = require('mongoose')\r\nconst cors = require('cors')\r\nconst RegisterModel = require('./API/Register')\r\nconst cookieParser = require('cookie-parser')\r\nconst UserDetailModal = require('./API/UserDetail')\r\n//post\r\nconst authRoute = require('./routes/auth')\r\nconst app = express()\r\n\r\n//get\r\nconst userRoute = require('./routes/user')\r\n\r\napp.use(express.json())\r\napp.use(cors())\r\napp.use(cookieParser())\r\n\r\n//connect\r\nmongoose.connect('mongodb+srv://mavoiem:WF3Xhi73BH6dXiOr@cap2api.evksd.mongodb.net/Cap2API?retryWrites=true&w=majority')\r\n\r\n\r\n//authentication\r\n\r\napp.post('/register',(req,res) =>{\r\n    RegisterModel.create(req.body)\r\n\r\n    .then(regis => res.json(regis))\r\n    .catch(err => res.json(err))\r\n})\r\n\r\napp.post('/login', (req,res) => {\r\n    const {username,password} = req.body\r\n\r\n    RegisterModel.findOne({username: username})\r\n    .then(user => {\r\n        console.log(user);\r\n        if(user){\r\n            if(user.password === password){\r\n                res.json(\"Success\")\r\n            } \r\n            else { res.json(\"the password is incorrect\")}\r\n        } else {res.json('No existed')}\r\n    })\r\n})\r\n\r\n\r\n//update\r\napp.put('/update', async (req,res) => {\r\n    const {_id, ...rest} = req.body\r\n\r\n    console.log(rest)\r\n    const data = await RegisterModel.updateOne({_id: _id}, rest)\r\n    res.send({success: true, message:\"update successfull\", data: data})\r\n})\r\n\r\n//delete\r\napp.delete('/delete/:id', async (req,res) => {\r\n    const id = req.params.id\r\n    const data = await RegisterModel.deleteOne({_id: id})\r\n    res.send({success: true, message:\"delete successfull\", data: data})\r\n})\r\n\r\n//Route\r\napp.use('/v1/auth', authRoute)\r\napp.use('/v1/user', userRoute)\r\n\r\napp.listen(3001, () => {\r\n    console.log(\"server is running\")\r\n})\r\n\r\n\r\n//test\r\napp.post('/userdetail',(req,res) =>{\r\n    UserDetailModal.create(req.body)\r\n\r\n    .then(regis => res.json(regis))\r\n    .catch(err => res.json(err))\r\n})"]}