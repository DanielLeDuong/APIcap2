{"version":3,"sources":["index.js"],"names":["express","require","mongoose","cors","RegisterModel","cookieParser","UserDetailModal","authRoute","app","userRoute","use","json","connect","post","req","res","create","body","then","regis","err","username","password","findOne","user","console","log","put","_id","rest","updateOne","data","send","success","message","id","params","deleteOne","listen"],"mappings":"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","sourcesContent":["//WF3Xhi73BH6dXiOr\r\n//mavoiem\r\n\r\nconst express = require('express')\r\nconst mongoose = require('mongoose')\r\nconst cors = require('cors')\r\nconst RegisterModel = require('./API/Register')\r\nconst cookieParser = require('cookie-parser')\r\nconst UserDetailModal = require('./API/UserDetail')\r\n//post\r\nconst authRoute = require('./routes/auth')\r\nconst app = express()\r\n\r\n//get\r\nconst userRoute = require('./routes/user')\r\n\r\napp.use(express.json())\r\napp.use(cors())\r\napp.use(cookieParser())\r\n\r\n//connect\r\nmongoose.connect('mongodb+srv://mavoiem:WF3Xhi73BH6dXiOr@cap2api.evksd.mongodb.net/Cap2API?retryWrites=true&w=majority')\r\n\r\n\r\n//authentication\r\n\r\napp.post('/register',(req,res) =>{\r\n    RegisterModel.create(req.body)\r\n\r\n    .then(regis => res.json(regis))\r\n    .catch(err => res.json(err))\r\n})\r\n\r\napp.post('/login', (req,res) => {\r\n    const {username,password} = req.body\r\n\r\n    RegisterModel.findOne({username: username})\r\n    .then(user => {\r\n        console.log(user);\r\n        if(user){\r\n            if(user.password === password){\r\n                res.json(\"Success\")\r\n            } \r\n            else { res.json(\"the password is incorrect\")}\r\n        } else {res.json('No existed')}\r\n    })\r\n})\r\n\r\n\r\n//update\r\napp.put('/update', async (req,res) => {\r\n    const {_id, ...rest} = req.body\r\n\r\n    console.log(rest)\r\n    const data = await RegisterModel.updateOne({_id: _id}, rest)\r\n    res.send({success: true, message:\"update successfull\", data: data})\r\n})\r\n\r\n//delete\r\napp.delete('/delete/:id', async (req,res) => {\r\n    const id = req.params.id\r\n    const data = await RegisterModel.deleteOne({_id: id})\r\n    res.send({success: true, message:\"delete successfull\", data: data})\r\n})\r\n\r\n//Route\r\napp.use('/v1/auth', authRoute)\r\napp.use('/v1/user', userRoute)\r\n\r\napp.listen(3001, () => {\r\n    console.log(\"server is running\")\r\n})\r\n\r\n\r\n//test\r\napp.post('/userdetail',(req,res) =>{\r\n    UserDetailModal.create(req.body)\r\n\r\n    .then(regis => res.json(regis))\r\n    .catch(err => res.json(err))\r\n})"],"file":"index.dev.js"}