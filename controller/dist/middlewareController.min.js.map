{"version":3,"sources":["middlewareController.js"],"names":["jwt","require","middlewareController","next","token","req","headers","verifyToken","split","verify","accessToken","err","user","json","status","res","deleteAuth","id","role","module","exports"],"mappings":"aAAA,IAAMA,IAAMC,QAAQ,gBAAdD,qBAAc,CAEdE,YAAAA,SAAAA,EAAAA,EAAoBC,GACtB,IAAAC,EAAAC,EAAAC,QAAAF,MACAG,GAAAA,EAAa,CACHH,IAAQC,EAAYD,EAA1BI,MAAA,KAAA,GAGIR,IAAIS,OAAOC,EAAa,YAAY,SAACC,EAAKC,GAFrCD,GACCD,EAAcN,OAAMI,KAAMK,KAAK,sBAEjCR,EAAOO,KAAAA,EACCE,WAGJC,EAAAD,OAAA,KAAAD,KAAA,+BAShBG,WAAA,SAAAX,EAAAU,EAAAZ,GACAa,qBAAYT,YAAKQ,EAAIZ,EAAS,WAC1BD,EAAAA,KAAoBe,IAACV,EAAAA,OAArBU,IAA0CZ,EAAAO,KAAAM,KAC/BN,IAEAG,EAAAD,OAAA,KAAAD,KAAA,2CAOnBM,OAAOC,QAAUlB","file":"middlewareController.min.js","sourcesContent":["const jwt = require('jsonwebtoken')\r\n\r\nconst middlewareController = {\r\n    //verify token\r\n    verifyToken: (req,res,next) => {\r\n        const token = req.headers.token\r\n        if(token){\r\n            const accessToken = token.split(\" \")[1]\r\n            jwt.verify(accessToken, \"accessKey\",(err, user) => {\r\n                if(err){\r\n                    res.status(403).json(\"Token is not valid\")\r\n                }\r\n                req.user = user\r\n                next()\r\n            })\r\n        }\r\n        else {\r\n            res.status(401).json(\"You 're not authentication\")\r\n        }\r\n\r\n    },\r\n\r\n    //phan quyen xoa tai khoan\r\n    deleteAuth: (req,res,next) => {\r\n        middlewareController.verifyToken(req,res, () => {\r\n            if(req.user.id == req.params.id || req.user.role) {\r\n                next()\r\n            } else {\r\n                res.status(403).json(\"You are not allow to delete account\")\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nmodule.exports = middlewareController"]}